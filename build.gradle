buildscript {
    ext {
        grailsVersion = project.grailsVersion
        assetPipelineVersion = project.assetPipelineVersion
    }
    repositories {
        maven { url 'https://repo.grails.org/grails/core' }
        jcenter()
    }
    dependencies {
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'

        classpath "org.grails:grails-gradle-plugin:${grailsVersion}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:coffee-asset-pipeline:${assetPipelineVersion}"
        classpath "org.grails.plugins:hibernate5:${gormVersion}"
    }
}

version '1.0.1'
group 'gki'

apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'eclipse'
apply plugin: 'idea'
// apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'asset-pipeline'
apply plugin: 'codenarc'
apply plugin: 'jacoco'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    maven { url 'https://repo.grails.org/grails/core' }
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:${grailsVersion}"
    }
    applyMavenExclusions false
}

codenarc {
    toolVersion = '0.25.2'
    ignoreFailures = true
    configFile = file('config/codenarc/codenarc.groovy')
    sourceSets = [project.sourceSets.main]
}

jacocoTestReport {
    executionData integrationTest, test
}

stats {
    formats = ['xml', 'html', 'txt']
    paths = [
        assets:     [name: 'Assets',      path: 'grails-app/assets'],
        config:     [name: 'Config',      path: 'grails-app/conf'],
        domain:     [name: 'Domains',     path: 'grails-app/domain'],
        view:       [name: 'Views',       path: 'grails-app/views'],
        controller: [name: 'Controllers', path: 'grails-app/controllers'],
        service:    [name: 'Services',    path: 'grails-app/services'],
        i18n:       [name: 'i18n',        path: 'grails-app/i18n'],
        taglib:     [name: 'taglib',      path: 'grails-app/taglib'],
        utils:      [name: 'utils',       path: 'grails-app/utils'],
        init:       [name: 'Initialization',    path: 'grails-app/init']
    ]
}

dependencies {
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
//    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.grails:grails-core'
    compile 'org.grails:grails-dependencies'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails.plugins:cache'
    compile 'org.grails.plugins:hibernate4'
    compile 'org.grails.plugins:scaffolding'
    compile 'org.grails.plugins:grails-spring-websocket:2.3.0'
    compile 'org.hibernate:hibernate-ehcache'

    console 'org.grails:grails-console'

    profile "org.grails.profiles:web:${grailsVersion}"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:${assetPipelineVersion}"
    runtime 'com.h2database:h2'

    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'

    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.23'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
    enableSourceMaps = true
}

//grails {
//    agent {
//        enabled = false
//    }
//}
